{"train":[{"input":[[7,7,7,7,7,7,7,7,7],[7,7,7,7,7,7,7,7,7],[7,7,7,7,7,7,7,7,7],[7,7,7,6,6,6,6,6,6],[7,7,7,6,7,7,6,7,7],[7,7,7,7,7,6,7,7,6],[6,6,6,6,6,6,7,7,7],[6,7,7,6,7,7,7,7,7],[7,7,6,7,7,6,7,7,7]],"output":[[6,6,6,6,6,6],[6,6,6,6,6,6],[6,6,7,7,7,7],[6,6,7,7,7,7],[7,7,7,7,6,6],[7,7,7,7,6,6]]},{"input":[[7,7,7,7,6,7,6,7,7,7,7,7,6,7,6,7],[7,7,7,7,6,7,6,7,7,7,7,7,6,7,6,7],[7,7,7,7,6,7,7,6,7,7,7,7,6,7,7,6],[7,7,7,7,6,7,6,7,7,7,7,7,6,7,6,7],[7,7,7,7,6,7,6,7,7,7,7,7,6,7,6,7],[7,7,7,7,6,7,7,6,7,7,7,7,6,7,7,6],[7,7,7,7,6,7,6,7,6,7,6,7,7,7,7,7],[7,7,7,7,6,7,6,7,6,7,6,7,7,7,7,7],[7,7,7,7,6,7,7,6,6,7,7,6,7,7,7,7]],"output":[[6,6,7,7,6,6,7,7],[6,6,7,7,6,6,7,7],[6,6,7,7,6,6,7,7],[6,6,7,7,6,6,7,7],[6,6,7,7,7,7,6,6],[6,6,7,7,7,7,6,6]]}],"test":[{"input":[[7,6,6,7,7,7,7,7,7,7,7,7,7,6,6,7],[6,6,7,7,7,7,7,7,7,7,7,7,6,6,7,7],[6,6,6,7,7,7,7,7,7,7,7,7,6,6,6,7],[7,6,7,7,7,7,7,7,7,7,7,7,7,6,7,7],[7,6,6,7,7,7,7,7,7,7,7,7,7,6,6,7],[7,7,7,7,7,7,7,7,7,6,6,7,7,6,6,7],[7,7,7,7,7,7,7,7,6,6,7,7,6,6,7,7],[7,7,7,7,7,7,7,7,6,6,6,7,6,6,6,7],[7,7,7,7,7,7,7,7,7,6,7,7,7,6,7,7],[7,7,7,7,7,7,7,7,7,6,6,7,7,6,6,7],[7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,7],[7,7,7,7,7,7,7,7,7,7,7,7,6,6,7,7],[7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,7],[7,7,7,7,7,7,7,7,7,7,7,7,7,6,7,7],[7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,7],[7,6,6,7,7,7,7,7,7,6,6,7,7,6,6,7],[6,6,7,7,7,7,7,7,6,6,7,7,6,6,7,7],[6,6,6,7,7,7,7,7,6,6,6,7,6,6,6,7],[7,6,7,7,7,7,7,7,7,6,7,7,7,6,7,7],[7,6,6,7,7,7,7,7,7,6,6,7,7,6,6,7],[7,6,6,7,7,7,7,7,7,7,7,7,7,6,6,7],[6,6,7,7,7,7,7,7,7,7,7,7,6,6,7,7],[6,6,6,7,7,7,7,7,7,7,7,7,6,6,6,7],[7,6,7,7,7,7,7,7,7,7,7,7,7,6,7,7],[7,6,6,7,7,7,7,7,7,7,7,7,7,6,6,7]],"output":[[7,7,6,6,6,6,7,7],[7,7,6,6,6,6,7,7],[6,6,6,6,7,7,7,7],[6,6,6,6,7,7,7,7],[6,6,6,6,6,6,7,7],[6,6,6,6,6,6,7,7],[7,7,6,6,7,7,7,7],[7,7,6,6,7,7,7,7],[7,7,6,6,6,6,7,7],[7,7,6,6,6,6,7,7]]},{"input":[[7,7,7,7],[7,7,7,7],[7,7,7,7],[7,7,7,7],[7,7,7,7],[7,7,6,6],[7,7,6,7],[7,7,6,7],[7,7,7,7],[7,7,7,6],[7,7,6,6],[7,7,6,7],[7,7,6,7],[7,7,7,7],[7,7,7,6],[6,6,6,6],[6,7,6,7],[6,7,6,7],[7,7,7,7],[7,6,7,6],[6,6,7,7],[6,7,7,7],[6,7,7,7],[7,7,7,7],[7,6,7,7]],"output":[[6,6,6,6],[6,6,6,6],[6,6,7,7],[6,6,7,7],[6,6,7,7],[6,6,7,7],[7,7,7,7],[7,7,7,7],[7,7,6,6],[7,7,6,6]]}],"metadata":{"task_id":"fractal_to_pattern in=1 out=2 inv=False empty=1 pad=False","dataset_id":"solve_fractal","transformation_id":"fractal_to_pattern"}}